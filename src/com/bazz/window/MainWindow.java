/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bazz.window;

import static javax.swing.JFileChooser.OPEN_DIALOG;
import static javax.swing.JFileChooser.SAVE_DIALOG;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;

import com.bazz.framework.STATE;
import com.bazz.treeparts.AngleObserver;
import java.util.LinkedList;
import java.util.List;
import java.util.Observer;

/**
 *
 * @author bazyli
 */
public class MainWindow extends JFrame {

    /**
     * Creates new form MainWindow
     *
     * @param game
     */
    private boolean running = true;
    private boolean isLoading;
    private GameLoop game;

    public static List<AngleObserver> observers = new LinkedList<>();

    /*
	 * static GraphicsDevice device = GraphicsEnvironment
	 * .getLocalGraphicsEnvironment().getScreenDevices()[0];
     */
    public MainWindow(String title) {

        initComponents();
        GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices()[0].setFullScreenWindow(this);

        // game.setGameHeight(h);
        // game.setGameWidth(w);
        System.out.println("mf 48 " + this.getWidth());
        game = new GameLoop(this);
        panelMainMenu.setSize(new Dimension(this.getWidth(), this.getHeight()));
        panelInGameMenu.setSize(new Dimension(this.getWidth(), this.getHeight()));
        mLabel.setPreferredSize(new Dimension(this.getWidth(), this.getHeight()));
        gamePanel.setPreferredSize(new Dimension(this.getWidth(), (int) (0.85 * this.getHeight())));
        game.setPreferredSize(new Dimension(this.getWidth(), (int) (0.85 * this.getHeight())));
        this.setLocationRelativeTo(null);
        pack();
        gamePanel.add(game);
        setFileChooserVisible(false);
        mLabel.setVisible(true);
        loadingScreen.setVisible(false);
        File f;
        try {
            f = new File(new File("saves/.").getCanonicalPath());
            fileChooser.setCurrentDirectory(f);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        setMenuVisible(true);
        this.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DnaWindow = new javax.swing.JDialog();
        panelFileChooser = new javax.swing.JPanel();
        fileChooser = new javax.swing.JFileChooser();
        panelMainMenu = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        newGameButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        resumeButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        panelInGameMenu = new javax.swing.JPanel();
        heightTextField = new javax.swing.JTextField();
        numberOfTreesTextField = new javax.swing.JTextField();
        dyingTreesTextField = new javax.swing.JTextField();
        neighboursTextField = new javax.swing.JTextField();
        waterTextField = new javax.swing.JTextField();
        sunTextField = new javax.swing.JTextField();
        pointsTextField = new javax.swing.JTextField();
        sizeTextField = new javax.swing.JTextField();
        ageTextField = new javax.swing.JTextField();
        gamePanel = new javax.swing.JPanel();
        difficultySlider = new javax.swing.JSlider();
        inGameMenuButton = new javax.swing.JButton();
        inGameAddTreeButton = new javax.swing.JButton();
        inGameExitButton = new javax.swing.JButton();
        monthsTextField = new javax.swing.JTextField();
        yearTextField = new javax.swing.JTextField();
        angleSlider = new javax.swing.JSlider();
        mLabel = new javax.swing.JLabel();
        loadingScreen = new javax.swing.JPanel();
        mLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout DnaWindowLayout = new javax.swing.GroupLayout(DnaWindow.getContentPane());
        DnaWindow.getContentPane().setLayout(DnaWindowLayout);
        DnaWindowLayout.setHorizontalGroup(
            DnaWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        DnaWindowLayout.setVerticalGroup(
            DnaWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Forest Simulator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setSize(new java.awt.Dimension(1280, 768));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        panelFileChooser.setBackground(new java.awt.Color(255, 255, 255));
        panelFileChooser.setOpaque(false);

        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });
        panelFileChooser.add(fileChooser);

        getContentPane().add(panelFileChooser, "card6");

        panelMainMenu.setBackground(new Color(0,0,0,0));
        panelMainMenu.setDoubleBuffered(false);
        panelMainMenu.setMinimumSize(new java.awt.Dimension(800, 600));
        panelMainMenu.setPreferredSize(getPreferredSize());
        panelMainMenu.setLayout(new java.awt.GridBagLayout());

        buttonPanel.setBackground(new java.awt.Color(255, 255, 255));
        buttonPanel.setInheritsPopupMenu(true);
        buttonPanel.setLayout(new java.awt.GridLayout(5, 1));

        newGameButton.setFont(new java.awt.Font("TeX Gyre Schola Math", 0, 18)); // NOI18N
        newGameButton.setForeground(new java.awt.Color(1, 1, 1));
        newGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconNewGame.png"))); // NOI18N
        newGameButton.setText("     new sim ");
        newGameButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        newGameButton.setBorderPainted(false);
        newGameButton.setContentAreaFilled(false);
        newGameButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconNewGameRollover.png"))); // NOI18N
        newGameButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                newGameButtonStateChanged(evt);
            }
        });
        newGameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newGameButtonMouseEntered(evt);
            }
        });
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(newGameButton);

        saveButton.setFont(new java.awt.Font("TeX Gyre Schola Math", 0, 18)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSave.png"))); // NOI18N
        saveButton.setText("           save");
        saveButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        saveButton.setBorderPainted(false);
        saveButton.setContentAreaFilled(false);
        saveButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconSaveRollover.png"))); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(saveButton);

        loadButton.setFont(new java.awt.Font("TeX Gyre Schola Math", 0, 18)); // NOI18N
        loadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconLoad.png"))); // NOI18N
        loadButton.setText("           load ");
        loadButton.setActionCommand("     load sim");
        loadButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        loadButton.setBorderPainted(false);
        loadButton.setContentAreaFilled(false);
        loadButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconLoadRollover.png"))); // NOI18N
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(loadButton);

        resumeButton.setFont(new java.awt.Font("TeX Gyre Schola Math", 0, 18)); // NOI18N
        resumeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconResume.png"))); // NOI18N
        resumeButton.setText("     resume");
        resumeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        resumeButton.setBorderPainted(false);
        resumeButton.setContentAreaFilled(false);
        resumeButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconResumeRollover.png"))); // NOI18N
        resumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(resumeButton);

        exitButton.setFont(new java.awt.Font("TeX Gyre Schola Math", 0, 18)); // NOI18N
        exitButton.setForeground(new java.awt.Color(1, 1, 1));
        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconExit.png"))); // NOI18N
        exitButton.setText("        exit");
        exitButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        exitButton.setBorderPainted(false);
        exitButton.setContentAreaFilled(false);
        exitButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconExitRollover.png"))); // NOI18N
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(exitButton);

        panelMainMenu.add(buttonPanel, new java.awt.GridBagConstraints());

        getContentPane().add(panelMainMenu, "card3");

        panelInGameMenu.setBackground(new java.awt.Color(29, 141, 49));
        panelInGameMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelInGameMenu.setMinimumSize(new java.awt.Dimension(1280, 768));

        heightTextField.setEditable(false);
        heightTextField.setText("height / average:                                            ");
        heightTextField.setDisabledTextColor(java.awt.Color.white);
        heightTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                heightTextFieldMouseClicked(evt);
            }
        });

        numberOfTreesTextField.setEditable(false);
        numberOfTreesTextField.setText("number of trees:          ");
        numberOfTreesTextField.setDisabledTextColor(java.awt.Color.white);
        numberOfTreesTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                numberOfTreesTextFieldMouseClicked(evt);
            }
        });
        numberOfTreesTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfTreesTextFieldActionPerformed(evt);
            }
        });

        dyingTreesTextField.setEditable(false);
        dyingTreesTextField.setText("dying trees:           ");
        dyingTreesTextField.setDisabledTextColor(java.awt.Color.white);
        dyingTreesTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dyingTreesTextFieldMouseClicked(evt);
            }
        });
        dyingTreesTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dyingTreesTextFieldActionPerformed(evt);
            }
        });

        neighboursTextField.setEditable(false);
        neighboursTextField.setText("neighbours:                  ");
        neighboursTextField.setDisabledTextColor(java.awt.Color.white);
        neighboursTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                neighboursTextFieldMouseClicked(evt);
            }
        });
        neighboursTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neighboursTextFieldActionPerformed(evt);
            }
        });

        waterTextField.setEditable(false);
        waterTextField.setText("water:                     ");
        waterTextField.setDisabledTextColor(java.awt.Color.white);
        waterTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                waterTextFieldMouseClicked(evt);
            }
        });
        waterTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterTextFieldActionPerformed(evt);
            }
        });

        sunTextField.setEditable(false);
        sunTextField.setText("sun:                     ");
        sunTextField.setDisabledTextColor(java.awt.Color.white);
        sunTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sunTextFieldMouseClicked(evt);
            }
        });

        pointsTextField.setEditable(false);
        pointsTextField.setText("points:                      ");
        pointsTextField.setDisabledTextColor(java.awt.Color.white);
        pointsTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pointsTextFieldMouseClicked(evt);
            }
        });

        sizeTextField.setEditable(false);
        sizeTextField.setText("size:                   ");
        sizeTextField.setDisabledTextColor(java.awt.Color.white);
        sizeTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sizeTextFieldMouseClicked(evt);
            }
        });

        ageTextField.setEditable(false);
        ageTextField.setText("age:         ");
        ageTextField.setDisabledTextColor(java.awt.Color.white);
        ageTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ageTextFieldMouseClicked(evt);
            }
        });

        gamePanel.setPreferredSize(new java.awt.Dimension(1980, 900));
        gamePanel.setRequestFocusEnabled(false);
        gamePanel.setLayout(new java.awt.BorderLayout());

        difficultySlider.setBackground(new java.awt.Color(29, 141, 49));
        difficultySlider.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "difficulty level", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Noto Sans CJK KR Regular", 0, 24))); // NOI18N
        difficultySlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        difficultySlider.setName("difficulty"); // NOI18N
        difficultySlider.setRequestFocusEnabled(false);
        difficultySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                difficultySliderStateChanged(evt);
            }
        });
        difficultySlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                difficultySliderMouseDragged(evt);
            }
        });

        inGameMenuButton.setText("Menu");
        inGameMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inGameMenuButtonActionPerformed(evt);
            }
        });

        inGameAddTreeButton.setText("Add tree");
        inGameAddTreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inGameAddTreeButtonActionPerformed(evt);
            }
        });

        inGameExitButton.setText("Exit");
        inGameExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inGameExitButtonActionPerformed(evt);
            }
        });

        monthsTextField.setEditable(false);
        monthsTextField.setText("months:           ");
        monthsTextField.setDisabledTextColor(java.awt.Color.white);
        monthsTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthsTextFieldMouseClicked(evt);
            }
        });
        monthsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthsTextFieldActionPerformed(evt);
            }
        });

        yearTextField.setEditable(false);
        yearTextField.setText("year:               ");
        yearTextField.setDisabledTextColor(java.awt.Color.white);
        yearTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yearTextFieldMouseClicked(evt);
            }
        });
        yearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTextFieldActionPerformed(evt);
            }
        });

        angleSlider.setMaximum(90);
        angleSlider.setMinimum(-90);
        angleSlider.setValue(45);
        angleSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                angleSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelInGameMenuLayout = new javax.swing.GroupLayout(panelInGameMenu);
        panelInGameMenu.setLayout(panelInGameMenuLayout);
        panelInGameMenuLayout.setHorizontalGroup(
            panelInGameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInGameMenuLayout.createSequentialGroup()
                .addGroup(panelInGameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelInGameMenuLayout.createSequentialGroup()
                        .addComponent(difficultySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inGameMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inGameAddTreeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inGameExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(angleSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(numberOfTreesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dyingTreesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monthsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))
                    .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelInGameMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heightTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(neighboursTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(waterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        panelInGameMenuLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {inGameAddTreeButton, inGameExitButton, inGameMenuButton});

        panelInGameMenuLayout.setVerticalGroup(
            panelInGameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInGameMenuLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panelInGameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(neighboursTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(panelInGameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(difficultySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inGameMenuButton)
                    .addGroup(panelInGameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inGameAddTreeButton)
                        .addComponent(inGameExitButton))
                    .addGroup(panelInGameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(monthsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dyingTreesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numberOfTreesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(angleSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(panelInGameMenu, "card4");

        mLabel.setBackground(java.awt.Color.white);
        mLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background2.png"))); // NOI18N
        mLabel.setLabelFor(this);
        mLabel.setDoubleBuffered(true);
        mLabel.setMaximumSize(new java.awt.Dimension(1920, 1080));
        mLabel.setOpaque(true);
        mLabel.setPreferredSize(getPreferredSize());
        getContentPane().add(mLabel, "card2");

        loadingScreen.setMinimumSize(new java.awt.Dimension(1280, 768));
        loadingScreen.setPreferredSize(new java.awt.Dimension(1280, 768));

        mLabel1.setBackground(java.awt.Color.white);
        mLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loadingScreen.png"))); // NOI18N
        mLabel1.setLabelFor(this);
        mLabel1.setDoubleBuffered(true);
        mLabel1.setInheritsPopupMenu(false);
        mLabel1.setOpaque(true);
        mLabel1.setPreferredSize(getPreferredSize());
        loadingScreen.add(mLabel1);

        getContentPane().add(loadingScreen, "card5");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void angleSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_angleSliderStateChanged
        // TODO add your handling code here:
        if (angleSlider.getValueIsAdjusting()) {
            for (int i = 0; i < observers.size(); i++) {
                observers.get(i).update(angleSlider.getValue());
                game.angle = angleSlider.getValue();
            }
            game.requestFocus();

        }
    }//GEN-LAST:event_angleSliderStateChanged

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_exitForm
        System.exit(0);
    }// GEN-LAST:event_exitForm

    private void inGameMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_inGameMenuButtonActionPerformed
        setMenuVisible(true);

    }// GEN-LAST:event_inGameMenuButtonActionPerformed

    private void inGameExitButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_inGameExitButtonActionPerformed
        System.exit(0);
    }// GEN-LAST:event_inGameExitButtonActionPerformed

    private void inGameAddTreeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_inGameAddTreeButtonActionPerformed
        game.setGameState(STATE.ADDTREE);
        game.requestFocus();

    }// GEN-LAST:event_inGameAddTreeButtonActionPerformed

    private void dyingTreesTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_dyingTreesTextFieldActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_dyingTreesTextFieldActionPerformed

    private void numberOfTreesTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_numberOfTreesTextFieldActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_numberOfTreesTextFieldActionPerformed

    private void difficultySliderMouseDragged(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_difficultySliderMouseDragged
        // TODO add your handling code here:
    }// GEN-LAST:event_difficultySliderMouseDragged

    private void difficultySliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_difficultySliderStateChanged
        if (!difficultySlider.getValueIsAdjusting()) {
            game.setDifficulty(difficultySlider.getValue());
            game.requestFocus();
        }
    }// GEN-LAST:event_difficultySliderStateChanged

    private void neighboursTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_neighboursTextFieldActionPerformed
    }// GEN-LAST:event_neighboursTextFieldActionPerformed

    private void yearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_yearTextFieldActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_yearTextFieldActionPerformed

    private void heightTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_heightTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_heightTextFieldMouseClicked

    private void numberOfTreesTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_numberOfTreesTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_numberOfTreesTextFieldMouseClicked

    private void dyingTreesTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_dyingTreesTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_dyingTreesTextFieldMouseClicked

    private void neighboursTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_neighboursTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_neighboursTextFieldMouseClicked

    private void waterTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_waterTextFieldActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_waterTextFieldActionPerformed

    private void waterTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_waterTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_waterTextFieldMouseClicked

    private void sunTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_sunTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_sunTextFieldMouseClicked

    private void pointsTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_pointsTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_pointsTextFieldMouseClicked

    private void sizeTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_sizeTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_sizeTextFieldMouseClicked

    private void ageTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_ageTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_ageTextFieldMouseClicked

    private void monthsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_monthsTextFieldActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_monthsTextFieldActionPerformed

    private void monthsTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_monthsTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_monthsTextFieldMouseClicked

    private void yearTextFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_yearTextFieldMouseClicked
        game.requestFocus();
    }// GEN-LAST:event_yearTextFieldMouseClicked

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fileChooserActionPerformed
        if (evt.getActionCommand().equals(javax.swing.JFileChooser.APPROVE_SELECTION)) {
            if (isLoading) {
                fileChooser.setDialogType(SAVE_DIALOG);
                File file = fileChooser.getSelectedFile();
                if (file.exists()) {
                    game.setFile(file);
                } else {
                    setFileChooserVisible(false);
                    setMenuVisible(true);
                    return;
                }
                setFileChooserVisible(false);
                panelInGameMenu.setVisible(false);
                panelMainMenu.setVisible(false);
                resetTextFields();
                if (game.getRunning()) {
                    game.setRunning(false);
                }
                try {
                    TimeUnit.MILLISECONDS.sleep(1000);
                } catch (InterruptedException e) {
                    System.out.println("watek przerwany");
                }
                game.start(true);
                loadingScreen.setVisible(true);

            } else {
                fileChooser.setDialogType(OPEN_DIALOG);
                File file = fileChooser.getSelectedFile();
                game.saveGame(file);
                setFileChooserVisible(false);

            }
        } else if (evt.getActionCommand().equals(javax.swing.JFileChooser.CANCEL_SELECTION)) {
            setFileChooserVisible(false);
        }
    }// GEN-LAST:event_fileChooserActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }// GEN-LAST:event_exitButtonActionPerformed

    private void resumeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_resumeButtonActionPerformed
        game.setGameState(STATE.GAME);
        setMenuVisible(false);
        game.requestFocus();
    }// GEN-LAST:event_resumeButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_loadButtonActionPerformed
        isLoading = true;
        setFileChooserVisible(true);
    }// GEN-LAST:event_loadButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButtonActionPerformed
        isLoading = false;
        setFileChooserVisible(true);
    }// GEN-LAST:event_saveButtonActionPerformed

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_newGameButtonActionPerformed

        if (game.getRunning()) {
            game.setRunning(false);
        }
        resetTextFields();
        try {
            TimeUnit.MILLISECONDS.sleep(100);
        } catch (InterruptedException e) {
            System.out.println("przerwano watek");
        }
        panelInGameMenu.setVisible(false);
        panelMainMenu.setVisible(false);
        game.start(false);
        loadingScreen.setVisible(true);

    }// GEN-LAST:event_newGameButtonActionPerformed

    private void newGameButtonMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_newGameButtonMouseEntered
        // TODO add your handling code here:

    }// GEN-LAST:event_newGameButtonMouseEntered

    private void newGameButtonStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_newGameButtonStateChanged

    }// GEN-LAST:event_newGameButtonStateChanged

    public static MainWindow mw;

    public static void main(String[] args) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mw = new MainWindow("Tree Simulator 1.0 ");
                // device.setFullScreenWindow(mw);
                mw.setVisible(true);
                Thread repaintDaemon = new RepaintDaemon();
                repaintDaemon.start();
            }

        });

    }

    static class RepaintDaemon extends Thread {

        RepaintDaemon() {
            setDaemon(true);
        }

        public void run() {

            while (true) {
                mw.repaint();
                try {
                    TimeUnit.MILLISECONDS.sleep(15);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void setMenuVisible(boolean visible) {
        panelInGameMenu.setVisible(!visible);
        gamePanel.setVisible(!visible);
        panelMainMenu.setVisible(visible);

        if (visible) {
            mLabel.setVisible(true);
            panelMainMenu.requestFocus();
            game.setGameState(STATE.MENU);

        } else {
            game.requestFocus();
            game.setGameState(STATE.GAME);
            mLabel.setVisible(false);
        }
        loadingScreen.setVisible(false);

    }

    private void setLoadingScreenVisible(boolean visible) {
        loadingScreen.setVisible(true);
        loadingScreen.requestFocus();
        try {
            TimeUnit.MILLISECONDS.sleep(2000);
        } catch (InterruptedException e) {
            System.out.println("przerwano loadingscreen");
        }
        loadingScreen.setVisible(false);
    }

    private void setFileChooserVisible(boolean visible) {
        panelFileChooser.setVisible(visible);
        if (visible) {
            panelFileChooser.requestFocus();
        }
    }

    public void setNumberOfTreesTextField(int number) {
        numberOfTreesTextField.setText("number of trees: " + number);
    }

    public void setWaterTextField(float water) {
        waterTextField.setText("water: " + String.format("%.2f", water));
    }

    public void setSunTextField(float sun) {
        sunTextField.setText("sun: " + String.format("%.2f", sun));
    }

    public void setPointsTextField(float points) {
        pointsTextField.setText("points: " + String.format("%.2f", points));
    }

    public void setSizeTextField(float size) {
        sizeTextField.setText("size: " + String.format("%.2f", size));
    }

    public void setYearTextField(int year) {
        yearTextField.setText("year: " + year);
    }

    public void setMonthTextField(int month) {
        monthsTextField.setText("month: " + month);
    }

    public void setDyingTreesTextField(int trees) {
        dyingTreesTextField.setText("dying trees: " + trees);
    }

    public void setNeighboursTextField(int neighbours) {
        neighboursTextField.setText("neighbours: " + neighbours);
    }

    public void setHeightTextField(float height, float average, float maximum) {
        heightTextField.setText("h: " + String.format("%.2f", -height) + " /max: " + String.format("%.2f", -maximum));
    }

    public void setAgeTextField(int age) {
        ageTextField.setText("age: " + age);
    }

    public void resetTextFields() {
        setWaterTextField(0);
        setSunTextField(0);
        setPointsTextField(0);
        setSizeTextField(0);
        setNumberOfTreesTextField(0);
        setDyingTreesTextField(0);
        setMonthTextField(0);
        setYearTextField(0);
        setHeightTextField(0, 0, 0);
        setAgeTextField(0);
        setNeighboursTextField(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DnaWindow;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JSlider angleSlider;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JSlider difficultySlider;
    private javax.swing.JTextField dyingTreesTextField;
    private javax.swing.JButton exitButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JTextField heightTextField;
    private javax.swing.JButton inGameAddTreeButton;
    private javax.swing.JButton inGameExitButton;
    private javax.swing.JButton inGameMenuButton;
    private javax.swing.JButton loadButton;
    private javax.swing.JPanel loadingScreen;
    private javax.swing.JLabel mLabel;
    private javax.swing.JLabel mLabel1;
    private javax.swing.JTextField monthsTextField;
    private javax.swing.JTextField neighboursTextField;
    private javax.swing.JButton newGameButton;
    private javax.swing.JTextField numberOfTreesTextField;
    private javax.swing.JPanel panelFileChooser;
    private javax.swing.JPanel panelInGameMenu;
    private javax.swing.JPanel panelMainMenu;
    private javax.swing.JTextField pointsTextField;
    private javax.swing.JButton resumeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField sizeTextField;
    private javax.swing.JTextField sunTextField;
    private javax.swing.JTextField waterTextField;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
